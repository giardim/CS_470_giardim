****************************************
APPROACHES: 
****************************************

* CNN3
	 17 Layer CNN with ReLu as the activation function. Uses convolution to transform the data. One of the convolution layers has a stride length of 2.

****************************************
RESULTS:
****************************************
APPROACH	TRAINING_accuracy	TRAINING_f1	TESTING_accuracy	TESTING_f1
CNN3	0.3201	0.3140	0.3232	0.3169

****************************************
MODEL ARCHITECTURES:
****************************************
* CNN3
CNN3(
  (CNN3): Sequential(
    (0): Conv2d(3, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): ReLU()
    (2): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (3): ReLU()
    (4): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (5): ReLU()
    (6): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (7): ReLU()
    (8): Conv2d(64, 64, kernel_size=(1, 1), stride=(2, 2))
    (9): ReLU()
    (10): Conv2d(64, 64, kernel_size=(1, 1), stride=(2, 2))
    (11): ReLU()
    (12): MaxPool2d(kernel_size=5, stride=5, padding=0, dilation=1, ceil_mode=False)
    (13): Flatten(start_dim=1, end_dim=-1)
    (14): Linear(in_features=64, out_features=32, bias=True)
    (15): ReLU()
    (16): Linear(in_features=32, out_features=10, bias=True)
  )
)

